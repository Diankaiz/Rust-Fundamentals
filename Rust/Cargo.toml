[package]
name = "my-web-service"
version = "0.1.0"
edition = "2021"
authors = ["Your Name <your.email@example.com>"]
description = "A modern web service built with Rust"
license = "MIT OR Apache-2.0"
repository = "https://github.com/Diankaiz/my-web-service"
homepage = "https://github.com/Diankaiz/my-web-service"
documentation = "https://docs.rs/my-web-service"
readme = "README.md"
keywords = ["web", "service", "api", "async"]
categories = ["web-programming::http-server"]
rust-version = "1.70"

[dependencies]
# Core async runtime
tokio = { version = "1.35", features = ["full"] }
futures = "0.3"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# HTTP client
reqwest = { version = "0.11", features = ["json", "rustls-tls"], default-features = false }

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Logging
log = "0.4"
env_logger = "0.11"

# Time and date
chrono = { version = "0.4", features = ["serde"] }
chrono-tz = "0.8"
humantime = "2.1"

# Utilities
uuid = { version = "1.6", features = ["v4", "serde"] }
regex = "1.10"
once_cell = "1.19"
dotenvy = "0.15"
url = { version = "2.5", features = ["serde"] }
base64 = "0.21"
hex = "0.4"
itertools = "0.12"

# File processing
csv = "1.3"
zip = "0.6"
flate2 = "1.0"
tar = "0.4"
mime = "0.3"
mime_guess = "2.0"

# System utilities
indicatif = "0.17"
num_cpus = "1.16"

# Optional CLI support
clap = { version = "4.4", features = ["derive", "env"], optional = true }

# Optional database support
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "postgres", "macros", "chrono", "uuid"], optional = true }

# Optional web framework support
actix-web = { version = "4.4", optional = true }
actix-rt = { version = "2.9", optional = true }
actix-cors = { version = "0.7", optional = true }

# Optional authentication support
jsonwebtoken = { version = "9.2", optional = true }
bcrypt = { version = "0.15", optional = true }

# Optional caching support
redis = { version = "0.24", features = ["tokio-comp", "connection-manager"], optional = true }

[dev-dependencies]
# Testing utilities
assert_cmd = "2.0"
tempfile = "3.8"
tokio-test = "0.4"

# Mocking (only when mock feature is enabled)
mockito = { version = "1.2", optional = true }

# Database testing support
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "postgres", "macros", "test"], optional = true }

[build-dependencies]
# Add build dependencies if needed

[profile.dev]
opt-level = 0
debug = true
split-debuginfo = "unpacked"
debug-assertions = true
overflow-checks = true
lto = false
panic = "unwind"
incremental = true
codegen-units = 256
rpath = false

[profile.release]
opt-level = 3
debug = false
split-debuginfo = "packed"
debug-assertions = false
overflow-checks = false
lto = "fat"
panic = "abort"
incremental = false
codegen-units = 1
rpath = false
strip = "symbols"

[profile.test]
opt-level = 1
debug = true
debug-assertions = true
overflow-checks = true
lto = false
codegen-units = 256

[profile.bench]
opt-level = 3
debug = false
debug-assertions = false
overflow-checks = false
lto = "fat"
codegen-units = 1

[features]
default = ["logging"]

# Core features
logging = ["log", "env_logger"]
cli = ["clap"]

# Database features
database = ["sqlx"]
postgres = ["database", "sqlx/postgres"]

# Web framework features
web = [
    "actix-web",
    "actix-rt", 
    "actix-cors",
    "jsonwebtoken",
    "bcrypt",
    "redis",
    "uuid",
    "chrono",
    "serde_json"
]

# Authentication features
auth = ["jsonwebtoken", "bcrypt"]

# Caching features
cache = ["redis"]

# Development and testing features
testing = ["sqlx?/test", "tokio-test"]
mock = ["mockito"]

# Performance features
performance = ["mimalloc"]

# TLS features
rustls = ["reqwest/rustls-tls"]
native-tls = ["reqwest/native-tls"]

[dependencies.mimalloc]
version = "0.1"
optional = true
default-features = false

[[bin]]
name = "my-web-service"
path = "src/main.rs"
required-features = []

[[bin]]
name = "cli"
path = "src/bin/cli.rs"
required-features = ["cli"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]